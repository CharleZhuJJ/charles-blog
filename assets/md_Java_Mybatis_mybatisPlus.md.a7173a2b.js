import{_ as t}from"./chunks/ArticleMetadata.4c626a83.js";import{_ as c,D as r,o as l,c as y,G as i,B as A,z as p,a as D,R as C,A as d,C as B}from"./chunks/framework.ef995079.js";const u="/charles-blog/assets/ISsqlInjector.278cc773.png",F="/charles-blog/assets/AbstractMethod.06de988e.png",I=JSON.parse('{"title":"Mybatis-Plus","description":"","frontmatter":{},"headers":[],"relativePath":"md/Java/Mybatis/mybatisPlus.md","filePath":"md/Java/Mybatis/mybatisPlus.md","lastUpdated":1688459773000}'),E={name:"md/Java/Mybatis/mybatisPlus.md"},m=p("h1",{id:"mybatis-plus",tabindex:"-1"},[D("Mybatis-Plus "),p("a",{class:"header-anchor",href:"#mybatis-plus","aria-label":'Permalink to "Mybatis-Plus"'},"​")],-1),b=C(`<h2 id="mybatis-plus-配置" tabindex="-1">Mybatis-plus 配置 <a class="header-anchor" href="#mybatis-plus-配置" aria-label="Permalink to &quot;Mybatis-plus 配置&quot;">​</a></h2><h3 id="configlocation" tabindex="-1">configLocation <a class="header-anchor" href="#configlocation" aria-label="Permalink to &quot;configLocation&quot;">​</a></h3><p>  MyBatis 配置文件位置，如果您有单独的 MyBatis 配置，请将其路径配置到 configLocation 中。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">config-location</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">classpath:mybatis-config.xml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">config-location</span><span style="color:#24292E;">: </span><span style="color:#032F62;">classpath:mybatis-config.xml</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;sqlSessionFactory&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">     &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;configLocation&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;classpath:mybatis-config.xml&quot;</span><span style="color:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">     &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;configLocation&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;classpath:mybatis-config.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="mapperlocations" tabindex="-1">mapperLocations <a class="header-anchor" href="#mapperlocations" aria-label="Permalink to &quot;mapperLocations&quot;">​</a></h3><p>  MyBatis Mapper 所对应的 XML 文件位置</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">mapper-locations</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">classpath*:mybatis/*.xml</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">mapper-locations</span><span style="color:#24292E;">: </span><span style="color:#032F62;">classpath*:mybatis/*.xml</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;sqlSessionFactory&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;mapperLocations&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;classpath*:mybatis/*.xml&quot;</span><span style="color:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;mapperLocations&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;classpath*:mybatis/*.xml&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="typealiasespackage" tabindex="-1">typeAliasesPackage： <a class="header-anchor" href="#typealiasespackage" aria-label="Permalink to &quot;typeAliasesPackage：&quot;">​</a></h3><p>  MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名（即 XML 中调用的时候不用包含包名）</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">type-aliases-package</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">cn.itcast.mp.pojo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">type-aliases-package</span><span style="color:#24292E;">: </span><span style="color:#032F62;">cn.itcast.mp.pojo</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;sqlSessionFactory&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;typeAliasesPackage&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.samples.quickstart.entity&quot;</span><span style="color:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;typeAliasesPackage&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.samples.quickstart.entity&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h3 id="mapunderscoretocamelcase" tabindex="-1">mapUnderscoreToCamelCase <a class="header-anchor" href="#mapunderscoretocamelcase" aria-label="Permalink to &quot;mapUnderscoreToCamelCase&quot;">​</a></h3><p>  是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在</span></span>
<span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">configuration</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">map-underscore-to-camel-case</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#关闭自动驼峰映射，该参数不能和mybatis-plus.config-location同时存在</span></span>
<span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">map-underscore-to-camel-case</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span></code></pre></div><h3 id="cacheenabled" tabindex="-1">cacheEnabled <a class="header-anchor" href="#cacheenabled" aria-label="Permalink to &quot;cacheEnabled&quot;">​</a></h3><p>  全局地开启或关闭配置文件中的所有映射器已经配置的任何缓存，默认为 true。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">configuration</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">cache-enabled</span><span style="color:#ADBAC7;">: </span><span style="color:#6CB6FF;">false</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">configuration</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">cache-enabled</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">false</span></span></code></pre></div><h3 id="idtype" tabindex="-1">idType <a class="header-anchor" href="#idtype" aria-label="Permalink to &quot;idType&quot;">​</a></h3><p>  全局默认主键类型，设置后，即可省略实体对象中的@TableId(type = IdType.AUTO)配置</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">global-config</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">db-config</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#8DDB8C;">id-type</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">auto</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">global-config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">db-config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">id-type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">auto</span></span></code></pre></div><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">&lt;!--这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合--&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">id</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;sqlSessionFactory&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;dataSource&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">ref</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;dataSource&quot;</span><span style="color:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;globalConfig&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;dbConfig&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                &lt;</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">class</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                    &lt;</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">name</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;idType&quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;">=</span><span style="color:#96D0FF;">&quot;AUTO&quot;</span><span style="color:#ADBAC7;">/&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">                &lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">            &lt;/</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">        &lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">    &lt;/</span><span style="color:#8DDB8C;">property</span><span style="color:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="color:#ADBAC7;">&lt;/</span><span style="color:#8DDB8C;">bean</span><span style="color:#ADBAC7;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--这里使用MP提供的sqlSessionFactory，完成了Spring与MP的整合--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;sqlSessionFactory&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;dataSource&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ref</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;dataSource&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;globalConfig&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;dbConfig&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;</span><span style="color:#22863A;">bean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">class</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">                    &lt;</span><span style="color:#22863A;">property</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">name</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;idType&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">value</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;AUTO&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"><span style="color:#24292E;">                &lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">            &lt;/</span><span style="color:#22863A;">property</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">        &lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">    &lt;/</span><span style="color:#22863A;">property</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">bean</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><h2 id="默认-sql-是不可见的-如果需要打印-sql-需要配置日志" tabindex="-1">默认 sql 是不可见的，如果需要打印 sql，需要配置日志 <a class="header-anchor" href="#默认-sql-是不可见的-如果需要打印-sql-需要配置日志" aria-label="Permalink to &quot;默认 sql 是不可见的，如果需要打印 sql，需要配置日志&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 配置日志</span></span>
<span class="line"><span style="color:#96D0FF;">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 配置日志</span></span>
<span class="line"><span style="color:#032F62;">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</span></span></code></pre></div><h2 id="mybatis-plus-的实现" tabindex="-1">Mybatis-plus 的实现 <a class="header-anchor" href="#mybatis-plus-的实现" aria-label="Permalink to &quot;Mybatis-plus 的实现&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Test</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testUserList</span><span style="color:#ADBAC7;">() throws Exception{</span></span>
<span class="line"><span style="color:#ADBAC7;">    String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">resource</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;mybatis-config.xml&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">    InputStream</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">inputStream</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Resources.</span><span style="color:#DCBDFB;">getResourceAsStream</span><span style="color:#ADBAC7;">(resource);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">//这里使用的是MP中的MybatisSqlSessionFactoryBuilder</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// MybatisSqlSessionFactoryBuilder继承的BaseMapper中的方法就载入到了SqlSession中，所以就可以直接使用相关的方法；</span></span>
<span class="line"><span style="color:#ADBAC7;">    SqlSessionFactory</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSessionFactory</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">MybatisSqlSessionFactoryBuilder</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">build</span><span style="color:#ADBAC7;">(inputStream);</span></span>
<span class="line"><span style="color:#ADBAC7;">    SqlSession</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSession</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSessionFactory.</span><span style="color:#DCBDFB;">openSession</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    UserMapper</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">userMapper</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> sqlSession.</span><span style="color:#DCBDFB;">getMapper</span><span style="color:#ADBAC7;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testUserList</span><span style="color:#24292E;">() throws Exception{</span></span>
<span class="line"><span style="color:#24292E;">    String resource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;mybatis-config.xml&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    InputStream inputStream </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Resources.</span><span style="color:#6F42C1;">getResourceAsStream</span><span style="color:#24292E;">(resource);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//这里使用的是MP中的MybatisSqlSessionFactoryBuilder</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// MybatisSqlSessionFactoryBuilder继承的BaseMapper中的方法就载入到了SqlSession中，所以就可以直接使用相关的方法；</span></span>
<span class="line"><span style="color:#24292E;">    SqlSessionFactory sqlSessionFactory </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MybatisSqlSessionFactoryBuilder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(inputStream);</span></span>
<span class="line"><span style="color:#24292E;">    SqlSession sqlSession </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSessionFactory.</span><span style="color:#6F42C1;">openSession</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    UserMapper userMapper </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> sqlSession.</span><span style="color:#6F42C1;">getMapper</span><span style="color:#24292E;">(UserMapper.class);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-的-sql-注入的原理" tabindex="-1">Mybatis-plus 的 Sql 注入的原理 <a class="header-anchor" href="#mybatis-plus-的-sql-注入的原理" aria-label="Permalink to &quot;Mybatis-plus 的 Sql 注入的原理&quot;">​</a></h2><ol><li>MP 在启动后会将 BaseMapper 中的一系列的方法注册到 meppedStatements 中；ISqlInjector 负责 SQL 的注入工作，它是一个接口，AbstractSqlInjector 是它的实现类。 <img src="`+u+`" alt="ISsqlInjector"></li><li>在 AbstractSqlInjector 中，主要是由 inspectInject()方法进行注入</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">inspectInject</span><span style="color:#ADBAC7;">(MapperBuilderAssistant builderAssistant, Class</span><span style="color:#F47067;">&lt;?&gt;</span><span style="color:#ADBAC7;"> mapperClass) {</span></span>
<span class="line"><span style="color:#ADBAC7;">    Class</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">?</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">modelClass</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">extractModelClass</span><span style="color:#ADBAC7;">(mapperClass);</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(modelClass </span><span style="color:#F47067;">!=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">className</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> mapperClass.</span><span style="color:#DCBDFB;">toString</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        Set</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">String</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">mapperRegistryCache</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> GlobalConfigUtils.</span><span style="color:#DCBDFB;">getMapperRegistryCache</span><span style="color:#ADBAC7;">(builderAssistant.</span><span style="color:#DCBDFB;">getConfiguration</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">!</span><span style="color:#ADBAC7;">mapperRegistryCache.</span><span style="color:#DCBDFB;">contains</span><span style="color:#ADBAC7;">(className)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">            List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">AbstractMethod</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">methodList</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">getMethodList</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">            </span><span style="color:#F47067;">if</span><span style="color:#ADBAC7;">(CollectionUtils.</span><span style="color:#DCBDFB;">isNotEmpty</span><span style="color:#ADBAC7;">(methodList)) {</span></span>
<span class="line"><span style="color:#ADBAC7;">                TableInfo</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">tableInfo</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> TableInfoHelper.</span><span style="color:#DCBDFB;">initTableInfo</span><span style="color:#ADBAC7;">(builderAssistant, modelClass);</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#768390;">// 循环注入自定义方法</span></span>
<span class="line"><span style="color:#ADBAC7;">                methodList.</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">((m) </span><span style="color:#F47067;">-&gt;</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                    m.</span><span style="color:#DCBDFB;">inject</span><span style="color:#ADBAC7;">(builderAssistant, mapperClass, modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#ADBAC7;">                });</span></span>
<span class="line"><span style="color:#ADBAC7;">            } </span><span style="color:#F47067;">else</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">                logger.</span><span style="color:#DCBDFB;">debug</span><span style="color:#ADBAC7;">(mapperClass.</span><span style="color:#DCBDFB;">toString</span><span style="color:#ADBAC7;">() </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;, No effective injection method was found.&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">            mapperRegistryCache.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(className);</span></span>
<span class="line"><span style="color:#ADBAC7;">        }</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">inspectInject</span><span style="color:#24292E;">(MapperBuilderAssistant builderAssistant, Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;"> mapperClass) {</span></span>
<span class="line"><span style="color:#24292E;">    Class&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">&gt; modelClass </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">extractModelClass</span><span style="color:#24292E;">(mapperClass);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(modelClass </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        String className </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> mapperClass.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        Set&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; mapperRegistryCache </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> GlobalConfigUtils.</span><span style="color:#6F42C1;">getMapperRegistryCache</span><span style="color:#24292E;">(builderAssistant.</span><span style="color:#6F42C1;">getConfiguration</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">mapperRegistryCache.</span><span style="color:#6F42C1;">contains</span><span style="color:#24292E;">(className)) {</span></span>
<span class="line"><span style="color:#24292E;">            List&lt;</span><span style="color:#D73A49;">AbstractMethod</span><span style="color:#24292E;">&gt; methodList </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getMethodList</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;">(CollectionUtils.</span><span style="color:#6F42C1;">isNotEmpty</span><span style="color:#24292E;">(methodList)) {</span></span>
<span class="line"><span style="color:#24292E;">                TableInfo tableInfo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> TableInfoHelper.</span><span style="color:#6F42C1;">initTableInfo</span><span style="color:#24292E;">(builderAssistant, modelClass);</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 循环注入自定义方法</span></span>
<span class="line"><span style="color:#24292E;">                methodList.</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">((m) </span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    m.</span><span style="color:#6F42C1;">inject</span><span style="color:#24292E;">(builderAssistant, mapperClass, modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#24292E;">                });</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                logger.</span><span style="color:#6F42C1;">debug</span><span style="color:#24292E;">(mapperClass.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;, No effective injection method was found.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            mapperRegistryCache.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(className);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><ol start="3"><li>最终调用抽象方法 injectMappedStatement 进行真正的注入</li></ol><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">* 注入自定义 MappedStatement</span></span>
<span class="line"><span style="color:#768390;">*</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">mapperClass</span><span style="color:#768390;"> mapper 接口</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">modelClass</span><span style="color:#768390;"> mapper 泛型</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@param</span><span style="color:#768390;"> </span><span style="color:#F69D50;">tableInfo</span><span style="color:#768390;"> 数据库表反射信息</span></span>
<span class="line"><span style="color:#768390;">* </span><span style="color:#F47067;">@return</span><span style="color:#768390;"> MappedStatement</span></span>
<span class="line"><span style="color:#768390;">*/</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">abstract</span><span style="color:#ADBAC7;"> MappedStatement </span><span style="color:#DCBDFB;">injectMappedStatement</span><span style="color:#ADBAC7;">(Class</span><span style="color:#F47067;">&lt;?&gt;</span><span style="color:#ADBAC7;"> var1, Class</span><span style="color:#F47067;">&lt;?&gt;</span><span style="color:#ADBAC7;"> var2, TableInfo var3);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* 注入自定义 MappedStatement</span></span>
<span class="line"><span style="color:#6A737D;">*</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">mapperClass</span><span style="color:#6A737D;"> mapper 接口</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">modelClass</span><span style="color:#6A737D;"> mapper 泛型</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#E36209;">tableInfo</span><span style="color:#6A737D;"> 数据库表反射信息</span></span>
<span class="line"><span style="color:#6A737D;">* </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> MappedStatement</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">abstract</span><span style="color:#24292E;"> MappedStatement </span><span style="color:#6F42C1;">injectMappedStatement</span><span style="color:#24292E;">(Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;"> var1, Class</span><span style="color:#D73A49;">&lt;?&gt;</span><span style="color:#24292E;"> var2, TableInfo var3);</span></span></code></pre></div><ol start="4"><li>该方法的实现，就是 basemapper 中的默认方法 <img src="`+F+`" alt="AbstractMethod"></li></ol><p>  以 SelectById 为例查看：（生成了 SqlSource 对象，再将 SQL 通过 addSelectMappedStatement 方法添加到 meppedStatements 中）</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">SelectById</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">AbstractMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">SelectById</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> MappedStatement </span><span style="color:#DCBDFB;">injectMappedStatement</span><span style="color:#ADBAC7;">(Class&lt;</span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">mapperClass</span><span style="color:#ADBAC7;">, Class&lt;</span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">modelClass</span><span style="color:#ADBAC7;">, TableInfo </span><span style="color:#F69D50;">tableInfo</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        SqlMethod</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlMethod</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> SqlMethod.LOGIC_SELECT_BY_ID;</span></span>
<span class="line"><span style="color:#ADBAC7;">        SqlSource</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSource</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">RawSqlSource</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.configuration, String.</span><span style="color:#DCBDFB;">format</span><span style="color:#ADBAC7;">(sqlMethod.</span><span style="color:#DCBDFB;">getSql</span><span style="color:#ADBAC7;">(),</span></span>
<span class="line"><span style="color:#ADBAC7;">                </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">Object</span><span style="color:#ADBAC7;">[]{</span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">sqlSelectColumns</span><span style="color:#ADBAC7;">(tableInfo, </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">), tableInfo.</span><span style="color:#DCBDFB;">getTableName</span><span style="color:#ADBAC7;">(),</span></span>
<span class="line"><span style="color:#ADBAC7;">                tableInfo.</span><span style="color:#DCBDFB;">getKeyColumn</span><span style="color:#ADBAC7;">(), tableInfo.</span><span style="color:#DCBDFB;">getKeyProperty</span><span style="color:#ADBAC7;">(),</span></span>
<span class="line"><span style="color:#ADBAC7;">                tableInfo.</span><span style="color:#DCBDFB;">getLogicDeleteSql</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">false</span><span style="color:#ADBAC7;">)}), Object.class);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">addSelectMappedStatement</span><span style="color:#ADBAC7;">(mapperClass, sqlMethod.</span><span style="color:#DCBDFB;">getMethod</span><span style="color:#ADBAC7;">(), sqlSource, modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SelectById</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractMethod</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SelectById</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MappedStatement </span><span style="color:#6F42C1;">injectMappedStatement</span><span style="color:#24292E;">(Class&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">mapperClass</span><span style="color:#24292E;">, Class&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">modelClass</span><span style="color:#24292E;">, TableInfo </span><span style="color:#E36209;">tableInfo</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        SqlMethod sqlMethod </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> SqlMethod.LOGIC_SELECT_BY_ID;</span></span>
<span class="line"><span style="color:#24292E;">        SqlSource sqlSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RawSqlSource</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.configuration, String.</span><span style="color:#6F42C1;">format</span><span style="color:#24292E;">(sqlMethod.</span><span style="color:#6F42C1;">getSql</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">Object</span><span style="color:#24292E;">[]{</span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">sqlSelectColumns</span><span style="color:#24292E;">(tableInfo, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">), tableInfo.</span><span style="color:#6F42C1;">getTableName</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                tableInfo.</span><span style="color:#6F42C1;">getKeyColumn</span><span style="color:#24292E;">(), tableInfo.</span><span style="color:#6F42C1;">getKeyProperty</span><span style="color:#24292E;">(),</span></span>
<span class="line"><span style="color:#24292E;">                tableInfo.</span><span style="color:#6F42C1;">getLogicDeleteSql</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)}), Object.class);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">addSelectMappedStatement</span><span style="color:#24292E;">(mapperClass, sqlMethod.</span><span style="color:#6F42C1;">getMethod</span><span style="color:#24292E;">(), sqlSource, modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="自定义-sql-注入器" tabindex="-1">自定义 sql 注入器 <a class="header-anchor" href="#自定义-sql-注入器" aria-label="Permalink to &quot;自定义 sql 注入器&quot;">​</a></h2><h3 id="_1-编写-mapper" tabindex="-1">1. 编写 mapper <a class="header-anchor" href="#_1-编写-mapper" aria-label="Permalink to &quot;1. 编写 mapper&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">interface</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyBaseMapper</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">T</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">BaseMapper</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">T</span><span style="color:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="color:#ADBAC7;">    List&lt;</span><span style="color:#F47067;">T</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">findAll</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyBaseMapper</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BaseMapper</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">T</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">findAll</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2-编写-sqlinjector" tabindex="-1">2.编写 SqlInjector <a class="header-anchor" href="#_2-编写-sqlinjector" aria-label="Permalink to &quot;2.编写 SqlInjector&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MySqlInjector</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">DefaultSqlInjector</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> List&lt;</span><span style="color:#F47067;">AbstractMethod</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#DCBDFB;">getMethodList</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">       List</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">AbstractMethod</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">list</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#768390;">// 获取父类中的集合</span></span>
<span class="line"><span style="color:#ADBAC7;">       list.</span><span style="color:#DCBDFB;">addAll</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">super</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">getMethodList</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">       </span><span style="color:#768390;">// 再扩充自定义的方法</span></span>
<span class="line"><span style="color:#ADBAC7;">       list.</span><span style="color:#DCBDFB;">add</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">FindAll</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> list;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MySqlInjector</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">DefaultSqlInjector</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">AbstractMethod</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getMethodList</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">       List&lt;</span><span style="color:#D73A49;">AbstractMethod</span><span style="color:#24292E;">&gt; list </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6A737D;">// 获取父类中的集合</span></span>
<span class="line"><span style="color:#24292E;">       list.</span><span style="color:#6F42C1;">addAll</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">super</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">getMethodList</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6A737D;">// 再扩充自定义的方法</span></span>
<span class="line"><span style="color:#24292E;">       list.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FindAll</span><span style="color:#24292E;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> list;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_3-编写具体的方法" tabindex="-1">3.编写具体的方法 <a class="header-anchor" href="#_3-编写具体的方法" aria-label="Permalink to &quot;3.编写具体的方法&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">FindAll</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">extends</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">AbstractMethod</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> MappedStatement </span><span style="color:#DCBDFB;">injectMappedStatement</span><span style="color:#ADBAC7;">(Class&lt;</span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;">&gt; </span><span style="color:#F69D50;">mapperClass</span><span style="color:#ADBAC7;">, Class&lt;</span><span style="color:#F47067;">?</span><span style="color:#ADBAC7;">&gt;  </span><span style="color:#F69D50;">modelClass</span><span style="color:#ADBAC7;">, TableInfo </span><span style="color:#F69D50;">tableInfo</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlMethod</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;findAll&quot;</span><span style="color:#ADBAC7;">;</span></span>
<span class="line"><span style="color:#ADBAC7;">        String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sql</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;select * from &quot;</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> tableInfo.</span><span style="color:#DCBDFB;">getTableName</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">        SqlSource</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sqlSource</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> languageDriver.</span><span style="color:#DCBDFB;">createSqlSource</span><span style="color:#ADBAC7;">(configuration, sql,  modelClass);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">addSelectMappedStatement</span><span style="color:#ADBAC7;">(mapperClass, sqlMethod, sqlSource,  modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FindAll</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AbstractMethod</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MappedStatement </span><span style="color:#6F42C1;">injectMappedStatement</span><span style="color:#24292E;">(Class&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">&gt; </span><span style="color:#E36209;">mapperClass</span><span style="color:#24292E;">, Class&lt;</span><span style="color:#D73A49;">?</span><span style="color:#24292E;">&gt;  </span><span style="color:#E36209;">modelClass</span><span style="color:#24292E;">, TableInfo </span><span style="color:#E36209;">tableInfo</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        String sqlMethod </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;findAll&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        String sql </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;select * from &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> tableInfo.</span><span style="color:#6F42C1;">getTableName</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">        SqlSource sqlSource </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> languageDriver.</span><span style="color:#6F42C1;">createSqlSource</span><span style="color:#24292E;">(configuration, sql,  modelClass);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">addSelectMappedStatement</span><span style="color:#24292E;">(mapperClass, sqlMethod, sqlSource,  modelClass, tableInfo);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_4-注册到-spring-容器" tabindex="-1">4.注册到 Spring 容器 <a class="header-anchor" href="#_4-注册到-spring-容器" aria-label="Permalink to &quot;4.注册到 Spring 容器&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">* 自定义SQL注入器</span></span>
<span class="line"><span style="color:#768390;">*/</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> MySqlInjector </span><span style="color:#DCBDFB;">mySqlInjector</span><span style="color:#ADBAC7;">(){</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">MySqlInjector</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* 自定义SQL注入器</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MySqlInjector </span><span style="color:#6F42C1;">mySqlInjector</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MySqlInjector</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-相关注解" tabindex="-1">Mybatis-plus 相关注解 <a class="header-anchor" href="#mybatis-plus-相关注解" aria-label="Permalink to &quot;Mybatis-plus 相关注解&quot;">​</a></h2><h3 id="tablename" tabindex="-1">@TableName <a class="header-anchor" href="#tablename" aria-label="Permalink to &quot;@TableName&quot;">​</a></h3><p> 注解在类上，指定类和数据库表的映射关系。实体类的类名（转成小写后）和数据库表名相同时，可以不指定该注解。</p><h3 id="tableid" tabindex="-1">@TableId <a class="header-anchor" href="#tableid" aria-label="Permalink to &quot;@TableId&quot;">​</a></h3><p> 注解在实体类的某一字段上，表示这个字段对应数据库表的主键。当主键名为 id 时（表中列名为 id，实体类中字段名为 id），无需使用该注解显式指定主键，mp 会自动关联。若类的字段名和表的列名不一致，可用 value 属性指定表的列名。另，这个注解有个重要的属性 type，用于指定主键策略。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">enum</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">IdType</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">AUTO</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">0</span><span style="color:#ADBAC7;">), </span><span style="color:#768390;">// 数据库id自增</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">NONE</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">), </span><span style="color:#768390;">// 未设置主键</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">INPUT</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">), </span><span style="color:#768390;">// 手动输入</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">ID_WORKER</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">3</span><span style="color:#ADBAC7;">), </span><span style="color:#768390;">// 默认的全局唯一id</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">UUID</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">4</span><span style="color:#ADBAC7;">), </span><span style="color:#768390;">// 全局唯一id uuid</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">ID_WORKER_STR</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">); </span><span style="color:#768390;">//ID_WORKER 字符串表示法</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IdType</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">AUTO</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 数据库id自增</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">NONE</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 未设置主键</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">INPUT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 手动输入</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ID_WORKER</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 默认的全局唯一id</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">UUID</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">), </span><span style="color:#6A737D;">// 全局唯一id uuid</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">ID_WORKER_STR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">//ID_WORKER 字符串表示法</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="tablefield" tabindex="-1">@TableField <a class="header-anchor" href="#tablefield" aria-label="Permalink to &quot;@TableField&quot;">​</a></h3><p> 注解在某一字段上，指定 Java 实体类的字段和数据库表的列的映射关系。这个注解有如下几个应用场景。</p><ul><li>排除非表字段：若 Java 实体类中某个字段，不对应表中的任何列，它只是用于保存一些额外的，或组装后的数据，则可以设置 exist 属性为 false，这样在对实体对象进行插入时，会忽略这个字段。排除非表字段也可以通过其他方式完成，如使用 static 或 transient 关键字。</li><li>字段填充策略：通过 fill 属性指定，字段为空时会进行自动填充</li><li>属性名和字段名不一致：用 value 属性指定数据库的字段名</li><li>属性值不查询出来：用 select 属性指定查询出来的对象中的属性值为 null</li></ul><h3 id="version" tabindex="-1">@Version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;@Version&quot;">​</a></h3><p>  乐观锁注解</p><h3 id="enumvalue" tabindex="-1">@EnumValue <a class="header-anchor" href="#enumvalue" aria-label="Permalink to &quot;@EnumValue&quot;">​</a></h3><p>  注解在枚举字段上</p><h3 id="tablelogic" tabindex="-1">@TableLogic <a class="header-anchor" href="#tablelogic" aria-label="Permalink to &quot;@TableLogic&quot;">​</a></h3><p>  逻辑删除</p><h3 id="keysequence" tabindex="-1">@KeySequence <a class="header-anchor" href="#keysequence" aria-label="Permalink to &quot;@KeySequence&quot;">​</a></h3><p>  序列主键策略（oracle）</p><h3 id="interceptorignore" tabindex="-1">@InterceptorIgnore <a class="header-anchor" href="#interceptorignore" aria-label="Permalink to &quot;@InterceptorIgnore&quot;">​</a></h3><p>  插件过滤规则</p><h2 id="mybatis-plus-的自动填充" tabindex="-1">Mybatis-plus 的自动填充 <a class="header-anchor" href="#mybatis-plus-的自动填充" aria-label="Permalink to &quot;Mybatis-plus 的自动填充&quot;">​</a></h2><h3 id="_1、实体类字段属性上需要增加注解" tabindex="-1">1、实体类字段属性上需要增加注解 <a class="header-anchor" href="#_1、实体类字段属性上需要增加注解" aria-label="Permalink to &quot;1、实体类字段属性上需要增加注解&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 字段添加填充内容</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">TableField</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">fill</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> FieldFill.INSERT)</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Date</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">createTime;</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">TableField</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">fill</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> FieldFill.INSERT_UPDATE)</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Date</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">updateTime;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 字段添加填充内容</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableField</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fill</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FieldFill.INSERT)</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Date createTime;</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableField</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">fill</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> FieldFill.INSERT_UPDATE)</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Date updateTime;</span></span></code></pre></div><h3 id="_2、编写处理器来处理这个注解" tabindex="-1">2、编写处理器来处理这个注解 <a class="header-anchor" href="#_2、编写处理器来处理这个注解" aria-label="Permalink to &quot;2、编写处理器来处理这个注解&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyMetaObjectHandler</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">implements</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">MetaObjectHandler</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 插入时的填充策略</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">insertFill</span><span style="color:#ADBAC7;">(MetaObject </span><span style="color:#F69D50;">metaObject</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// Object createDate = this.getFieldValByName(&quot;createTime&quot;, metaObject); 根据属性名获取属性值</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#768390;">// setFieldValByName(String fieldName, Object fieldVal, MetaObject metaObject)</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">setFieldValByName</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;createTime&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Date</span><span style="color:#ADBAC7;">(),metaObject);</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">setFieldValByName</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;updateTime&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Date</span><span style="color:#ADBAC7;">(),metaObject);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 更新时的填充策略</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">updateFill</span><span style="color:#ADBAC7;">(MetaObject </span><span style="color:#F69D50;">metaObject</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.</span><span style="color:#DCBDFB;">setFieldValByName</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;updateTime&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">Date</span><span style="color:#ADBAC7;">(),metaObject);</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyMetaObjectHandler</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MetaObjectHandler</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 插入时的填充策略</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">insertFill</span><span style="color:#24292E;">(MetaObject </span><span style="color:#E36209;">metaObject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// Object createDate = this.getFieldValByName(&quot;createTime&quot;, metaObject); 根据属性名获取属性值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// setFieldValByName(String fieldName, Object fieldVal, MetaObject metaObject)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;createTime&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;updateTime&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 更新时的填充策略</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">updateFill</span><span style="color:#24292E;">(MetaObject </span><span style="color:#E36209;">metaObject</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">setFieldValByName</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;updateTime&quot;</span><span style="color:#24292E;">,</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Date</span><span style="color:#24292E;">(),metaObject);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="乐观锁" tabindex="-1">乐观锁 <a class="header-anchor" href="#乐观锁" aria-label="Permalink to &quot;乐观锁&quot;">​</a></h2><ul><li>乐观锁：故名思意十分乐观，它总是认为不会出现问题，无论干什么不去上锁！如果出现了问题，再次更新值测试</li><li>悲观锁：故名思意十分悲观，它总是认为总是出现问题，无论干什么都会上锁！再去操作！</li></ul><h3 id="乐观锁实现方式" tabindex="-1">乐观锁实现方式 <a class="header-anchor" href="#乐观锁实现方式" aria-label="Permalink to &quot;乐观锁实现方式&quot;">​</a></h3><ul><li>取出记录时，获取当前 version</li><li>更新时，带上这个 version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果 version 不对，就更新失败</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">-- 乐观锁：1、先查询，获得版本号 version = 1</span></span>
<span class="line"><span style="color:#768390;">-- A</span></span>
<span class="line"><span style="color:#F47067;">update</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">set</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">name</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;kuangshen&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#F47067;">where</span><span style="color:#ADBAC7;"> id </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">and</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#768390;">-- B 线程抢先完成，这个时候 version = 2，会导致 A 修改失败！</span></span>
<span class="line"><span style="color:#F47067;">update</span><span style="color:#ADBAC7;"> user </span><span style="color:#F47067;">set</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">name</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;kuangshen&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">+</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span>
<span class="line"><span style="color:#F47067;">where</span><span style="color:#ADBAC7;"> id </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">and</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">version</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 乐观锁：1、先查询，获得版本号 version = 1</span></span>
<span class="line"><span style="color:#6A737D;">-- A</span></span>
<span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;kuangshen&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">where</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#6A737D;">-- B 线程抢先完成，这个时候 version = 2，会导致 A 修改失败！</span></span>
<span class="line"><span style="color:#D73A49;">update</span><span style="color:#24292E;"> user </span><span style="color:#D73A49;">set</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;kuangshen&quot;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">where</span><span style="color:#24292E;"> id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">version</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div><h3 id="mybatisplus-实现乐观锁" tabindex="-1">MybatisPlus 实现乐观锁 <a class="header-anchor" href="#mybatisplus-实现乐观锁" aria-label="Permalink to &quot;MybatisPlus 实现乐观锁&quot;">​</a></h3><h4 id="_1、实体类加对应的字段" tabindex="-1">1、实体类加对应的字段 <a class="header-anchor" href="#_1、实体类加对应的字段" aria-label="Permalink to &quot;1、实体类加对应的字段&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Version</span><span style="color:#ADBAC7;"> </span><span style="color:#768390;">//乐观锁Version注解</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Integer</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">version;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Version</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//乐观锁Version注解</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer version;</span></span></code></pre></div><h4 id="_2、注册组件" tabindex="-1">2、注册组件 <a class="header-anchor" href="#_2、注册组件" aria-label="Permalink to &quot;2、注册组件&quot;">​</a></h4><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 扫描我们的 mapper 文件夹</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">MapperScan</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;com.kuang.mapper&quot;</span><span style="color:#ADBAC7;">)</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">EnableTransactionManagement</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Configuration</span><span style="color:#ADBAC7;"> </span><span style="color:#768390;">// 配置类</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MyBatisPlusConfig</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 注册乐观锁插件</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> OptimisticLockerInterceptor </span><span style="color:#DCBDFB;">optimisticLockerInterceptor</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">OptimisticLockerInterceptor</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 扫描我们的 mapper 文件夹</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">MapperScan</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;com.kuang.mapper&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableTransactionManagement</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 配置类</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MyBatisPlusConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 注册乐观锁插件</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> OptimisticLockerInterceptor </span><span style="color:#6F42C1;">optimisticLockerInterceptor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OptimisticLockerInterceptor</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-的分页查询" tabindex="-1">Mybatis-plus 的分页查询 <a class="header-anchor" href="#mybatis-plus-的分页查询" aria-label="Permalink to &quot;Mybatis-plus 的分页查询&quot;">​</a></h2><h3 id="_1、配置拦截器组件" tabindex="-1">1、配置拦截器组件 <a class="header-anchor" href="#_1、配置拦截器组件" aria-label="Permalink to &quot;1、配置拦截器组件&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">// 分页插件</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> PaginationInterceptor </span><span style="color:#DCBDFB;">paginationInterceptor</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">PaginationInterceptor</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 分页插件</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> PaginationInterceptor </span><span style="color:#6F42C1;">paginationInterceptor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PaginationInterceptor</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2、直接使用-page-对象即可" tabindex="-1">2、直接使用 Page 对象即可 <a class="header-anchor" href="#_2、直接使用-page-对象即可" aria-label="Permalink to &quot;2、直接使用 Page 对象即可&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">void</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">testPage</span><span style="color:#ADBAC7;">(){</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 参数一：当前页</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 参数二：页面大小</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#768390;">// 使用了分页插件之后，所有的分页操作也变得简单的！</span></span>
<span class="line"><span style="color:#ADBAC7;">    Page</span><span style="color:#F69D50;">&lt;</span><span style="color:#F47067;">User</span><span style="color:#F69D50;">&gt; </span><span style="color:#ADBAC7;">page</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> Page&lt;&gt;(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#6CB6FF;">5</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    userMapper.</span><span style="color:#DCBDFB;">selectPage</span><span style="color:#ADBAC7;">(page,</span><span style="color:#6CB6FF;">null</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"><span style="color:#ADBAC7;">    page.</span><span style="color:#DCBDFB;">getRecords</span><span style="color:#ADBAC7;">().</span><span style="color:#DCBDFB;">forEach</span><span style="color:#ADBAC7;">(System.out</span><span style="color:#F47067;">::</span><span style="color:#ADBAC7;">println);</span></span>
<span class="line"><span style="color:#ADBAC7;">    System.out.</span><span style="color:#DCBDFB;">println</span><span style="color:#ADBAC7;">(page.</span><span style="color:#DCBDFB;">getTotal</span><span style="color:#ADBAC7;">());</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">testPage</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 参数一：当前页</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 参数二：页面大小</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用了分页插件之后，所有的分页操作也变得简单的！</span></span>
<span class="line"><span style="color:#24292E;">    Page&lt;</span><span style="color:#D73A49;">User</span><span style="color:#24292E;">&gt; page </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Page&lt;&gt;(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    userMapper.</span><span style="color:#6F42C1;">selectPage</span><span style="color:#24292E;">(page,</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    page.</span><span style="color:#6F42C1;">getRecords</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">forEach</span><span style="color:#24292E;">(System.out</span><span style="color:#D73A49;">::</span><span style="color:#24292E;">println);</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(page.</span><span style="color:#6F42C1;">getTotal</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-的逻辑删除" tabindex="-1">Mybatis-plus 的逻辑删除 <a class="header-anchor" href="#mybatis-plus-的逻辑删除" aria-label="Permalink to &quot;Mybatis-plus 的逻辑删除&quot;">​</a></h2><h3 id="_1、实体类中增加属性" tabindex="-1">1、实体类中增加属性 <a class="header-anchor" href="#_1、实体类中增加属性" aria-label="Permalink to &quot;1、实体类中增加属性&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">TableLogic</span><span style="color:#ADBAC7;"> </span><span style="color:#768390;">//逻辑删除</span></span>
<span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> Integer</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">deleted;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">TableLogic</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">//逻辑删除</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer deleted;</span></span></code></pre></div><h3 id="_2、配置组件" tabindex="-1">2、配置组件 <a class="header-anchor" href="#_2、配置组件" aria-label="Permalink to &quot;2、配置组件&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 配置逻辑删除</span></span>
<span class="line"><span style="color:#96D0FF;">mybatis-plus.global-config.db-config.sql-injector:com.baomidou.mybatisplus.mapper.LogicSqlInjector</span></span>
<span class="line"><span style="color:#96D0FF;">mybatis-plus.global-config.db-config.logic-delete-value=1</span></span>
<span class="line"><span style="color:#96D0FF;">mybatis-plus.global-config.db-config.logic-not-delete-value=0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 配置逻辑删除</span></span>
<span class="line"><span style="color:#032F62;">mybatis-plus.global-config.db-config.sql-injector:com.baomidou.mybatisplus.mapper.LogicSqlInjector</span></span>
<span class="line"><span style="color:#032F62;">mybatis-plus.global-config.db-config.logic-delete-value=1</span></span>
<span class="line"><span style="color:#032F62;">mybatis-plus.global-config.db-config.logic-not-delete-value=0</span></span></code></pre></div><h2 id="mybatis-plus-的性能分析插件" tabindex="-1">Mybatis-plus 的性能分析插件 <a class="header-anchor" href="#mybatis-plus-的性能分析插件" aria-label="Permalink to &quot;Mybatis-plus 的性能分析插件&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">/**</span></span>
<span class="line"><span style="color:#768390;">* SQL执行效率插件</span></span>
<span class="line"><span style="color:#768390;">*/</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Profile</span><span style="color:#ADBAC7;">({</span><span style="color:#96D0FF;">&quot;dev&quot;</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;test&quot;</span><span style="color:#ADBAC7;">})</span><span style="color:#768390;">// 设置 dev test 环境开启，保证我们的效率</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> PerformanceInterceptor </span><span style="color:#DCBDFB;">performanceInterceptor</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">    PerformanceInterceptor</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">performanceInterceptor</span><span style="color:#F69D50;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">PerformanceInterceptor</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">    performanceInterceptor.</span><span style="color:#DCBDFB;">setMaxTime</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">100</span><span style="color:#ADBAC7;">); </span><span style="color:#768390;">// ms设置sql执行的最大时间，如果超过了则不执行</span></span>
<span class="line"><span style="color:#ADBAC7;">    performanceInterceptor.</span><span style="color:#DCBDFB;">setFormat</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">true</span><span style="color:#ADBAC7;">); </span><span style="color:#768390;">// 是否格式化代码</span></span>
<span class="line"><span style="color:#ADBAC7;">   </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> performanceInterceptor;</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;">* SQL执行效率插件</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Profile</span><span style="color:#24292E;">({</span><span style="color:#032F62;">&quot;dev&quot;</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;test&quot;</span><span style="color:#24292E;">})</span><span style="color:#6A737D;">// 设置 dev test 环境开启，保证我们的效率</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> PerformanceInterceptor </span><span style="color:#6F42C1;">performanceInterceptor</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">    PerformanceInterceptor performanceInterceptor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">PerformanceInterceptor</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    performanceInterceptor.</span><span style="color:#6F42C1;">setMaxTime</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// ms设置sql执行的最大时间，如果超过了则不执行</span></span>
<span class="line"><span style="color:#24292E;">    performanceInterceptor.</span><span style="color:#6F42C1;">setFormat</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 是否格式化代码</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> performanceInterceptor;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-中-oracle-主键-sequence" tabindex="-1">Mybatis-plus 中 Oracle 主键 Sequence <a class="header-anchor" href="#mybatis-plus-中-oracle-主键-sequence" aria-label="Permalink to &quot;Mybatis-plus 中 Oracle 主键 Sequence&quot;">​</a></h2><h3 id="_1、创建序列" tabindex="-1">1、创建序列 <a class="header-anchor" href="#_1、创建序列" aria-label="Permalink to &quot;1、创建序列&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">--创建序列</span></span>
<span class="line"><span style="color:#F47067;">CREATE</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">SEQUENCE</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">SEQ_USER</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">START</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">WITH</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;"> INCREMENT </span><span style="color:#F47067;">BY</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">--创建序列</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">SEQUENCE</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SEQ_USER</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">START</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">WITH</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> INCREMENT </span><span style="color:#D73A49;">BY</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span></code></pre></div><h3 id="_2、配置-id-生成策略" tabindex="-1">2、配置 id 生成策略 <a class="header-anchor" href="#_2、配置-id-生成策略" aria-label="Permalink to &quot;2、配置 id 生成策略&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;">#id生成策略</span></span>
<span class="line"><span style="color:#8DDB8C;">mybatis-plus</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">  </span><span style="color:#8DDB8C;">global-config</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#8DDB8C;">db-config</span><span style="color:#ADBAC7;">:</span></span>
<span class="line"><span style="color:#ADBAC7;">      </span><span style="color:#8DDB8C;">id-type</span><span style="color:#ADBAC7;">: </span><span style="color:#96D0FF;">input</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#id生成策略</span></span>
<span class="line"><span style="color:#22863A;">mybatis-plus</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">global-config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#22863A;">db-config</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#22863A;">id-type</span><span style="color:#24292E;">: </span><span style="color:#032F62;">input</span></span></code></pre></div><h3 id="_3、配置序列" tabindex="-1">3、配置序列 <a class="header-anchor" href="#_3、配置序列" aria-label="Permalink to &quot;3、配置序列&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">Configuration</span></span>
<span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">MapperScan</span><span style="color:#ADBAC7;">(</span><span style="color:#96D0FF;">&quot;cn.itcast.mp.mapper&quot;</span><span style="color:#ADBAC7;">) </span><span style="color:#768390;">//设置mapper接口的扫描包</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">MybatisPlusConfig</span><span style="color:#ADBAC7;"> {</span></span>
<span class="line"><span style="color:#768390;">    /**</span></span>
<span class="line"><span style="color:#768390;">    * 序列生成器</span></span>
<span class="line"><span style="color:#768390;">    */</span></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Bean</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> OracleKeyGenerator </span><span style="color:#DCBDFB;">oracleKeyGenerator</span><span style="color:#ADBAC7;">(){</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">new</span><span style="color:#ADBAC7;"> </span><span style="color:#DCBDFB;">OracleKeyGenerator</span><span style="color:#ADBAC7;">();</span></span>
<span class="line"><span style="color:#ADBAC7;">   }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">MapperScan</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;cn.itcast.mp.mapper&quot;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">//设置mapper接口的扫描包</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">MybatisPlusConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#6A737D;">    /**</span></span>
<span class="line"><span style="color:#6A737D;">    * 序列生成器</span></span>
<span class="line"><span style="color:#6A737D;">    */</span></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> OracleKeyGenerator </span><span style="color:#6F42C1;">oracleKeyGenerator</span><span style="color:#24292E;">(){</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">OracleKeyGenerator</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_4、在实体对象中指定序列的名称" tabindex="-1">4、在实体对象中指定序列的名称 <a class="header-anchor" href="#_4、在实体对象中指定序列的名称" aria-label="Permalink to &quot;4、在实体对象中指定序列的名称&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#ADBAC7;">@</span><span style="color:#F47067;">KeySequence</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">value</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> </span><span style="color:#96D0FF;">&quot;SEQ_USER&quot;</span><span style="color:#ADBAC7;">, </span><span style="color:#6CB6FF;">clazz</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> Long.class)</span></span>
<span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">class</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">User</span><span style="color:#ADBAC7;">{</span></span>
<span class="line"><span style="color:#ADBAC7;">    ......</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">KeySequence</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;SEQ_USER&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">clazz</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Long.class)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">User</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    ......</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="mybatis-plus-的通用枚举" tabindex="-1">Mybatis-plus 的通用枚举 <a class="header-anchor" href="#mybatis-plus-的通用枚举" aria-label="Permalink to &quot;Mybatis-plus 的通用枚举&quot;">​</a></h2><h3 id="_1、定义枚举类" tabindex="-1">1、定义枚举类 <a class="header-anchor" href="#_1、定义枚举类" aria-label="Permalink to &quot;1、定义枚举类&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">enum</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">SexEnum</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">implements</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">IEnum</span><span style="color:#ADBAC7;">&lt;</span><span style="color:#F47067;">Integer</span><span style="color:#ADBAC7;">&gt; {</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">MAN</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">1</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;男&quot;</span><span style="color:#ADBAC7;">),</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#6CB6FF;">WOMAN</span><span style="color:#ADBAC7;">(</span><span style="color:#6CB6FF;">2</span><span style="color:#ADBAC7;">,</span><span style="color:#96D0FF;">&quot;女&quot;</span><span style="color:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> </span><span style="color:#F47067;">int</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">value;</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> String</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">     </span><span style="color:#DCBDFB;">SexEnum</span><span style="color:#ADBAC7;">(</span><span style="color:#F47067;">int</span><span style="color:#ADBAC7;"> </span><span style="color:#F69D50;">value</span><span style="color:#ADBAC7;">, String </span><span style="color:#F69D50;">desc</span><span style="color:#ADBAC7;">) {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> value;</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.desc </span><span style="color:#F47067;">=</span><span style="color:#ADBAC7;"> desc;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> Integer </span><span style="color:#DCBDFB;">getValue</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.value;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ADBAC7;">    @</span><span style="color:#F47067;">Override</span></span>
<span class="line"><span style="color:#ADBAC7;">    </span><span style="color:#F47067;">public</span><span style="color:#ADBAC7;"> String </span><span style="color:#DCBDFB;">toString</span><span style="color:#ADBAC7;">() {</span></span>
<span class="line"><span style="color:#ADBAC7;">        </span><span style="color:#F47067;">return</span><span style="color:#ADBAC7;"> </span><span style="color:#6CB6FF;">this</span><span style="color:#ADBAC7;">.desc;</span></span>
<span class="line"><span style="color:#ADBAC7;">    }</span></span>
<span class="line"><span style="color:#ADBAC7;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SexEnum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">implements</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">IEnum</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">MAN</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;男&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">WOMAN</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span><span style="color:#032F62;">&quot;女&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String desc;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">SexEnum</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#E36209;">value</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">desc</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.desc </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> desc;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Integer </span><span style="color:#6F42C1;">getValue</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.value;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> String </span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.desc;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="_2、配置" tabindex="-1">2、配置 <a class="header-anchor" href="#_2、配置" aria-label="Permalink to &quot;2、配置&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#768390;"># 枚举包扫描</span></span>
<span class="line"><span style="color:#96D0FF;">mybatis-plus.type-enums-package=cn.itcast.mp.enums</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 枚举包扫描</span></span>
<span class="line"><span style="color:#032F62;">mybatis-plus.type-enums-package=cn.itcast.mp.enums</span></span></code></pre></div><h3 id="_3、实体类添加属性" tabindex="-1">3、实体类添加属性 <a class="header-anchor" href="#_3、实体类添加属性" aria-label="Permalink to &quot;3、实体类添加属性&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark-dimmed vp-code-dark"><code><span class="line"><span style="color:#F47067;">private</span><span style="color:#ADBAC7;"> SexEnum</span><span style="color:#F69D50;"> </span><span style="color:#ADBAC7;">sex;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> SexEnum sex;</span></span></code></pre></div>`,106);function h(s,g,q,v,S,f){const o=t,e=r("ClientOnly");return l(),y("div",null,[m,i(e,null,{default:A(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(l(),d(o,{key:0,article:s.$frontmatter},null,8,["article"])):B("",!0)]}),_:1}),b])}const j=c(E,[["render",h]]);export{I as __pageData,j as default};
